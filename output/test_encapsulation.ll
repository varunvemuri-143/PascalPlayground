; LLVM IR generated by LLVMGenerator
target datalayout = "e-m:e-p:32:32:i64:64-n32:64-S128"
target triple   = "wasm32-unknown-unknown"

declare i8*  @malloc(i32)
declare void @printInt(i32)
declare void @printString(i8*)
declare i32  @readInt()

@g_balance = global i32 0
@g_secretCode = global i8* null
@g_w = global %struct.Wallet* null
@.str.0 = private unnamed_addr constant [14 x i8] c"Deposited 100\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"Balance is: \00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"Secret code: \00", align 1

%struct.Wallet = type { i32, i8* }

define void @Wallet_Init(%struct.Wallet* %this) {
entry:
  %r11 = getelementptr %struct.Wallet, %struct.Wallet* %this, i32 0, i32 0
  store i32 0, i32* %r11
  %r12 = getelementptr %struct.Wallet, %struct.Wallet* %this, i32 0, i32 1
  store i8* null, i8** %r12
  ret void
}

define void @Wallet_Deposit(%struct.Wallet* %this) {
entry:
  %r13 = getelementptr %struct.Wallet, %struct.Wallet* %this, i32 0, i32 0
  %r14 = add i32 0, 100
  store i32 %r14, i32* %r13
  %r15 = bitcast [14 x i8]* @.str.0 to i8*
  call void @printString(i8* %r15)
  ret void
}

define void @Wallet_ShowBalance(%struct.Wallet* %this) {
entry:
  %r16 = getelementptr %struct.Wallet, %struct.Wallet* %this, i32 0, i32 0
  %r17 = load i32, i32* %r16
  %r18 = bitcast [13 x i8]* @.str.1 to i8*
  call void @printString(i8* %r18)
  call void @printInt(i32 %r17)
  ret void
}

define void @Wallet_RevealCode(%struct.Wallet* %this) {
entry:
  %r19 = getelementptr %struct.Wallet, %struct.Wallet* %this, i32 0, i32 1
  %r20 = load i8*, i8** %r19
  %r21 = bitcast [14 x i8]* @.str.2 to i8*
  call void @printString(i8* %r21)
  call void @printString(i8* %r20)
  ret void
}


define i32 @main() {
entry:
  %r0 = getelementptr %struct.Wallet, %struct.Wallet* null, i32 1
  %r1 = ptrtoint %struct.Wallet* %r0 to i32
  %r2 = call i8* @malloc(i32 %r1)
  %r3 = bitcast i8* %r2 to %struct.Wallet*
  store %struct.Wallet* %r3, %struct.Wallet** @g_w
  %r4 = load %struct.Wallet*, %struct.Wallet** @g_w
  call void @Wallet_Init(%struct.Wallet* %r4)
  %r5 = load %struct.Wallet*, %struct.Wallet** @g_w
  call void @Wallet_Deposit(%struct.Wallet* %r5)
  %r6 = load %struct.Wallet*, %struct.Wallet** @g_w
  call void @Wallet_ShowBalance(%struct.Wallet* %r6)
  %r7 = load %struct.Wallet*, %struct.Wallet** @g_w
  call void @Wallet_RevealCode(%struct.Wallet* %r7)
  %r8 = load %struct.Wallet*, %struct.Wallet** @g_w
  %r9 = getelementptr %struct.Wallet, %struct.Wallet* %r8, i32 0, i32 0
  %r10 = add i32 0, 0
  store i32 %r10, i32* %r9
  ret i32 0
}
