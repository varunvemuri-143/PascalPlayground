; LLVM IR generated by LLVMGenerator
target datalayout = "e-m:e-p:32:32:i64:64-n32:64-S128"
target triple   = "wasm32-unknown-unknown"

declare i8*  @malloc(i32)
declare void @printInt(i32)
declare void @printString(i8*)
declare i32  @readInt()

@g_i = global i32 0
@g_total = global i32 0
@.str.0 = private unnamed_addr constant [20 x i8] c"Testing for loop...\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"Total sum:\00", align 1



define i32 @main() {
entry:
  %r0 = add i32 0, 0
  store i32 %r0, i32* @g_total
  %r1 = bitcast [20 x i8]* @.str.0 to i8*
  call void @printString(i8* %r1)
  %r2 = add i32 0, 1
  store i32 %r2, i32* @g_i
  br label %forcond1

forcond1:
  %r3 = load i32, i32* @g_i
  %r4 = add i32 0, 5
  %r5 = icmp sle i32 %r3, %r4
  br i1 %r5, label %forbody2, label %forend4

forbody2:
  %r6 = load i32, i32* @g_total
  %r7 = load i32, i32* @g_i
  %r8 = add i32 %r6, %r7
  store i32 %r8, i32* @g_total
  %r9 = load i32, i32* @g_i
  call void @printInt(i32 %r9)
  br label %forinc3

forinc3:
  %r10 = add i32 %r3, 1
  store i32 %r10, i32* @g_i
  br label %forcond1

forend4:
  %r11 = bitcast [11 x i8]* @.str.5 to i8*
  call void @printString(i8* %r11)
  %r12 = load i32, i32* @g_total
  call void @printInt(i32 %r12)
  ret i32 0
}
