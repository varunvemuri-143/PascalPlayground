; LLVM IR generated by LLVMGenerator
target datalayout = "e-m:e-p:32:32:i64:64-n32:64-S128"
target triple   = "wasm32-unknown-unknown"

declare i8*  @malloc(i32)
declare void @printInt(i32)
declare void @printString(i8*)
declare i32  @readInt()

@g_ws = global %struct.Workstation* null
@.str.0 = private unnamed_addr constant [40 x i8] c"SystemBase: hardware and OS initialized\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"Workstation: loading user profile and applications\00", align 1

%struct.SystemBase = type {  }
%struct.Workstation = type {  }

define void @SystemBase_Init(%struct.SystemBase* %this) {
entry:
  ret void
}

define void @SystemBase_Initialize(%struct.SystemBase* %this) {
entry:
  %r7 = bitcast [40 x i8]* @.str.0 to i8*
  call void @printString(i8* %r7)
  ret void
}

define void @Workstation_Init(%struct.Workstation* %this) {
entry:
  ret void
}

define void @Workstation_StartupSequence(%struct.Workstation* %this) {
entry:
  %r8 = bitcast [51 x i8]* @.str.1 to i8*
  call void @printString(i8* %r8)
  ret void
}


define i32 @main() {
entry:
  %r0 = getelementptr %struct.Workstation, %struct.Workstation* null, i32 1
  %r1 = ptrtoint %struct.Workstation* %r0 to i32
  %r2 = call i8* @malloc(i32 %r1)
  %r3 = bitcast i8* %r2 to %struct.Workstation*
  store %struct.Workstation* %r3, %struct.Workstation** @g_ws
  %r4 = load %struct.Workstation*, %struct.Workstation** @g_ws
  %r5 = bitcast %struct.Workstation* %r4 to %struct.SystemBase*
  call void @SystemBase_Initialize(%struct.SystemBase* %r5)
  %r6 = load %struct.Workstation*, %struct.Workstation** @g_ws
  call void @Workstation_StartupSequence(%struct.Workstation* %r6)
  ret i32 0
}
